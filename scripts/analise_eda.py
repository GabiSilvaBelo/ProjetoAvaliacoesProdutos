import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns
import os

# Criar a pasta 'figures' caso n√£o exista
os.makedirs('figures', exist_ok=True)

# Carregar os dados
df = pd.read_csv('data/olist_order_reviews_dataset.csv')

# Exibir primeiras linhas
print("üëÄ Primeiras linhas do dataset:")
print(df.head())

# Informa√ß√µes b√°sicas
print("\nüìä Informa√ß√µes gerais:")
print(df.info())

# Estat√≠sticas descritivas
print("\nüìà Estat√≠sticas descritivas:")
print(df.describe())

# Verificar valores nulos
print("\n‚ùì Valores nulos por coluna:")
print(df.isnull().sum())

# Visualiza√ß√µes
sns.set(style="whitegrid")

# 1. Histograma das notas de avalia√ß√£o
plt.figure(figsize=(8, 5))
sns.countplot(data=df, x='review_score', palette='viridis')
plt.title("Distribui√ß√£o das Notas de Avalia√ß√£o")
plt.xlabel("Nota")
plt.ylabel("Quantidade")
plt.tight_layout()
plt.savefig('figures/histograma_notas.png')
plt.close()

# 2. Presen√ßa de coment√°rio vs. nota m√©dia
df['tem_comentario'] = df['review_comment_message'].notnull()

plt.figure(figsize=(6, 4))
sns.barplot(data=df, x='tem_comentario', y='review_score', palette='coolwarm')
plt.title("Nota m√©dia: com e sem coment√°rio")
plt.xlabel("Tem Coment√°rio?")
plt.ylabel("Nota m√©dia")
plt.xticks([0, 1], ['N√£o', 'Sim'])
plt.tight_layout()
plt.savefig('figures/media_notas_comentario.png')
plt.close()

# 3. Quantidade de avalia√ß√µes por data
df['review_creation_date'] = pd.to_datetime(df['review_creation_date'])
avaliacoes_por_data = df.groupby('review_creation_date').size()

plt.figure(figsize=(10, 5))
avaliacoes_por_data.plot()
plt.title("N√∫mero de avalia√ß√µes ao longo do tempo")
plt.xlabel("Data")
plt.ylabel("Quantidade de Avalia√ß√µes")
plt.tight_layout()
plt.savefig('figures/avaliacoes_por_data.png')
plt.close()
